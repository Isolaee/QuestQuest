use crate::attack::Attack;
use crate::base_unit::BaseUnit;
use crate::unit_class::UnitClass;
use crate::unit_race::{Race, Terrain};
use combat::DamageType;
use graphics::HexCoord;

pub struct GoblinGrunt {
    base: BaseUnit,
    attacks: Vec<Attack>,
}

impl GoblinGrunt {
    pub fn new(name: String, position: HexCoord, terrain: Terrain) -> Self {
        let base = BaseUnit::new(name, position, Race::Goblin, UnitClass::Grunt, terrain);
        
        let attacks = vec![
            Attack::melee("Club Smash", 10, 1, DamageType::Bludgeon),
        ];
        GoblinGrunt { base, attacks }
    }

    pub fn add_attack(&mut self, attack: Attack) {
        self.attacks.push(attack);
    }
}

crate::impl_unit_delegate!(GoblinGrunt);